import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
    public static int migratoryBirds(List<Integer> arr) {
      int c1=0;
      int c2=0;
      int c3=0;
      int c4=0;
      int c5=0;
     List<Integer> l=new ArrayList<>();
      for(int i=0;i<arr.size();i++){
          if(arr.get(i)==1){
              c1++;
          }
          if(arr.get(i)==2){
              c2++;
          }
          if(arr.get(i)==3){
              c3++;
          }
          if(arr.get(i)==4){
              c4++;
          }
          if(arr.get(i)==5){
              c5++;
          }
      }
     l.add(c1);
     l.add(c2);
     l.add(c3);
     l.add(c4);
     l.add(c5);
     int max=l.get(0);
     List<Integer> l1=new ArrayList<>();
     for(int i=0;i<l.size();i++){
         if(max<l.get(i)){
             max=l.get(i);
         }
     }
     for(int j=0;j<l.size();j++){
         if(l.get(j)==max){
             l1.add(j);
         }
     }
   int a=l1.get(0)+1;
   return a;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}

