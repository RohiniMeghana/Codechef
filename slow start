Slow Start
Time Limit: 2, Memory Limit: 256000
Gaurav is playing a certain video game that requires him to collect Monsters, and use them to fight against other Monsters. Gaurav's favorite Monster has an attack stat of X, and is fighting against another monster whose health stat is H. The fight proceeds in turns: each turn, Gaurav's Monster does X damage to its opponent.
However, Gaurav's Monster has the ability Slow Start, which halves its attack for the first five turns.
That is, for the first five turns, the damage done to the opponent is X/2​ and not X.
How many turns will Gaurav's Monster take to defeat the opponent (i.e, do at least H damage to it)?
Input
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of a single line of input, containing two space-separated integers X and H - Gaurav's Monster's attack, and the opponent's health.

Constraints
1 ≤ T ≤ 104
1 ≤ X, H ≤ 103
X is even.
Output
For each test case, output on a new line the number of turns required for the opponent to be defeated.
Example
Sample Input
4
4 7
4 16
100 1
2 1000
Sample Output
4
7
1
503
Explanation
Test case 1: X = 4, so x/2 = 2, damage is done for the first five turns. By the fourth turn, 8 damage has been done, which is more than H = 7.



//program
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        for(int i=0;i<t;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            int s=0;
            int c=0;
          int j=1;
           while(s<b){
               if(j<=5){
                c++;
                s+=a/2;
               j++;
               }
               else{
                   c++;
                   s+=a;
                
               }
            }
            
            System.out.println(c);
            
            
        }
    }
}
